<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/data/jpa
		http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">
        <!--1.entityManagerFacroty的创建交给spring容器管理-->
        <bean id="entityManagerFacroty" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
                <!--配置数据源-->
                <property name="dataSource" ref="dataSource"/>
                <!--配置要扫描的实体类所在的包-->
                    <property name="packagesToScan" value="cn.itcast.domain"/>
                <!--jpa实现厂家-->
                <property name="persistenceProvider">
                        <bean class="org.hibernate.jpa.HibernatePersistenceProvider"/>
                </property>
                <!--jpa供应商配置-->
                <property name="jpaVendorAdapter">
                        <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                                <!--是否自动创建数据库-->
                                <property name="generateDdl" value="false" />
                                <!--指定数据库类型-->
                                <property name="database" value="MYSQL" />
                                <!--数据库方言，支持的特有语法-->
                                <property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect" />
                                <!--是否显示sql语句-->
                                <property name="showSql" value="true" />
                        </bean>
                </property>
                <!--jpa方言：高级的特性-->
                <property name="jpaDialect">
                        <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>
                </property>
            <!--注入jpa配置信息
                加载jpa的基本信息和jpa实现方式(hibernate)的配置信息
                    hibernate.hbm2ddl.auto：自动创建数据库表
                        create：每次都会重新创建数据库表
                        update:有表不会创建，没有表重新创建表
            -->
            <property name="JpaProperties">
                <props>
                    <prop key="hibernate.hbm2ddl.auto">update</prop>
                </props>
            </property>
        </bean>
        <!--2.配置数据库连接池-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="com.mysql.jdbc.Driver" />
        <property name="jdbcUrl" value="jdbc:mysql://192.168.107.10:3306/jpa" />
        <property name="user" value="root" />
        <property name="password" value="root" />
    </bean>

    <!--3.整合spring dataJpa-->
        <jpa:repositories  base-package="cn.itcast.dao" transaction-manager-ref="transactionManager"
                          entity-manager-factory-ref="entityManagerFacroty">
        </jpa:repositories>
        <!--4.配置事务管理器-->
        <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
                    <property name="entityManagerFactory" ref="entityManagerFacroty"/>
        </bean>
        <!--5.声明式事务-->
        <!--6.配置包扫描-->
        <context:component-scan base-package="cn.itcast" ></context:component-scan>
</beans>